# Copyright (c) 2024 daniyl-x
# Licensed under BSD-1-Clause License.


- name: Manage packages
  hosts: all
  become: true

  tasks:
    - name: Update apt packages
      apt:
        name: "*"
        state: latest
        update_cache: true
        cache_valid_time: 3600
      when: ansible_facts["os_family"] == "Debian"

    - name: Install apt packages
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ packages }}"
      when: ansible_facts["os_family"] == "Debian"


- name: Configure system
  hosts: all
  become: true

  tasks:
    - name: Disable SSH server options
      replace:
        path: /etc/ssh/sshd_config
        regexp: "^({{ item }} (?!no)|#{{ item }}).*"
        replace: "{{ item }} no"
      loop:
        - PasswordAuthentication
        - PermitRootLogin
      notify: Restart SSH server

    - name: Enable current user lingering
      file:
        path: "/var/lib/systemd/linger/{{ ansible_user }}"
        state: touch
        modification_time: preserve
        access_time: preserve

    - name: Reduce swappiness
      sysctl:
        name: vm.swappiness
        value: 10
      notify: Reboot

  handlers:
    - name: Restart SSH server
      service:
        name: sshd
        state: restarted

    - name: Reboot
      reboot:


- name: Install dotfiles
  hosts: all

  vars:
    fzf_scripts:
      - completion
      - key-bindings

  tasks:
    - name: Pull dotfiles
      git:
        repo: "https://github.com/daniyl-x/dotfiles"
        dest: "/home/{{ ansible_user }}/dotfiles"

    - name: Enumerate dotfiles directories
      find:
        paths: "/home/{{ ansible_user }}/dotfiles"
        file_type: directory
        # This parameter uses globs, not regex
        excludes: ".*"
      register: available_dotfiles

    - name: Process and store available dotfiles
      set_fact:
        available_dotfiles: >
          {{ available_dotfiles.files | map(attribute='path')
          | map('basename') | list }}"

    - name: Copy dotfiles to ~/
      synchronize:
        src: "/home/{{ ansible_user }}/dotfiles/{{ item }}/"
        dest: "/home/{{ ansible_user }}"
      loop: "{{ dotfiles }}"
      delegate_to: "{{ inventory_hostname }}"
      when: item in available_dotfiles

    - name: Copy get_fzf_tag.awk to the target
      copy:
        src: get_fzf_tag.awk
        dest: /tmp/get_fzf_tag.awk
        mode: 0400
      when: "'bash' in dotfiles"

    - name: Get fzf tag
      shell: "awk -f /tmp/get_fzf_tag.awk"
      register: fzf_tag
      when: "'bash' in dotfiles"

    - name: Store fzf tag
      set_fact:
        fzf_tag: "{{ fzf_tag.stdout }}"
      when: "'bash' in dotfiles"

    - name: Create fzf scripts directory
      file:
        path: /usr/share/fzf/shell
        state: directory
        mode: a+rx
        modification_time: preserve
        access_time: preserve
      when: "'bash' in dotfiles"
      become: true

    - name: Pull fzf bash scripts
      get_url:
        url: "https://raw.githubusercontent.com/junegunn/fzf/refs/tags/{{ fzf_tag }}/shell/{{ item }}.bash"
        dest: "/usr/share/fzf/shell/{{ item }}.bash"
        mode: a+rx
      loop: "{{ fzf_scripts }}"
      when: "'bash' in dotfiles"
      become: true

    - name: Create ~/.vim/autoload directory
      file:
        path: "/home/{{ ansible_user }}/.vim/autoload"
        state: directory
        modification_time: preserve
        access_time: preserve

    - name: Pull Vim Plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "/home/{{ ansible_user }}/.vim/autoload/plug.vim"
      when: "'vim' in dotfiles"

    - name: Update and clean Vim plugins
      shell: "vim -s ~/.vimrc +PlugUpdate +PlugClean +qa"
      when: "'vim' in dotfiles"

